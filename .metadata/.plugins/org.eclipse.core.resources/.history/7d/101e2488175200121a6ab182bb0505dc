<?xml version="1.0" encoding="utf-8"?>
<views:AbstractRefView xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		title="EditRuleSetView" 
		xmlns:views="views.*">
	<views:layout>
		<s:VerticalLayout paddingTop="5" paddingBottom="5" paddingLeft="5" paddingRight="5" />
	</views:layout>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import model.LeagueRules;
			
			import mx.collections.ArrayCollection;
			
			import spark.events.ViewNavigatorEvent;
			
			[Bindable]
			private var _curRuleSet:LeagueRules = new LeagueRules();
			
			[Bindable]
			private var _buttonNumsList:ArrayCollection = new ArrayCollection([1,2,3,4,5]);
			
			override protected function viewActivateHandler(event:ViewNavigatorEvent):void{
				super.viewActivateHandler(event);
				
				for each(var rules:LeagueRules in headRefModel.leagues){
					if(rules.leagueName == headRefModel.rulesSelectedForEditing){
						_curRuleSet = rules;
					}
				}
								
			}
			
			protected function saveBtnMouseDownHandler(event:MouseEvent):void{
				//if rules by this name exist, replace and bail.
				for each(var rules:LeagueRules in headRefModel.leagues){
					if(rules.leagueName == _curRuleSet.leagueName){
						rules = _curRuleSet;
						headRefModel.gameModel.leagueRules = _curRuleSet;
						goToView(NewGameView);
						return;
					}
				}
				
				headRefModel.leagues.addItem(_curRuleSet);
				headRefModel.gameModel.leagueRules = _curRuleSet;
				goToView(NewGameView);
				return;
				
			}
			
		]]>
	</fx:Script>
	<!--public var leagueName		: String;-->

	<s:Label text="League Name:" styleName="editRulesLabel" />
	<s:TextInput id="nameInput" text="@{_curRuleSet.leagueName}" right="20" />

	<!--public var leagueManagerEmail : String;-->
	<s:Label text="League Manager's Email:" styleName="editRulesLabel" />
	<s:TextInput id="emailInput"  text="@{_curRuleSet.leagueManagerEmail}" right="20" />
	
	<!--public var strikesAllowed	: Number;-->
	<s:Label text="Strikes Allowed" styleName="editRulesLabel" />
	<s:ButtonBar id="strikesAllowBar" dataProvider="{_buttonNumsList}" requireSelection="true" 
				 right="20" height="20" width="100%" selectedItem="{_curRuleSet.strikesAllowed}"  />
	
	<!--public var ballsAllowed		: Number;-->
	<s:Label text="Balls Allowed" styleName="editRulesLabel" />
	<s:ButtonBar id="ballsAllowBar" dataProvider="{_buttonNumsList}" requireSelection="true" 
				 right="20" height="20" width="100%" selectedItem="{_curRuleSet.ballsAllowed}"  />
	
	<!--public var foulsAllowed		: Number;-->
	<s:Label text="Fouls Allowed" styleName="editRulesLabel" />
	<s:ButtonBar id="foulsAllowBar" dataProvider="{_buttonNumsList}" requireSelection="true" 
				 right="20" height="20" width="100%" selectedItem="{_curRuleSet.foulsAllowed}"  />
	
	<!--public var numberOfInnings	: Number;-->
	<s:Label text="Number of Innings: {_curRuleSet.numberOfInnings}" styleName="editRulesLabel" />
	<s:HSlider id="inningsSlider" minimum="1" maximum="16" value="@{_curRuleSet.numberOfInnings}" /> 
		
	<!--public var allowsTies		: Boolean;-->
	<s:HGroup width="100%" verticalAlign="middle" >	
		<s:Label text="Allow Ties" styleName="editRulesLabel" />
		<s:Spacer width="100%" />
		<s:ToggleSwitch id="tiesToggle" selected="@{_curRuleSet.allowsTies}"/> 
	</s:HGroup>

	<!--public var foulsAreStrikes	: Boolean;-->
	<s:HGroup width="100%" verticalAlign="middle" >
		<s:Label text="Fouls are Strikes" styleName="editRulesLabel" />
		<s:Spacer width="100%" />
		<s:ToggleSwitch id="foulsToggle" selected="@{_curRuleSet.foulsAreStrikes}"/>
	</s:HGroup>

	<!--public var walkOnBalls		: Boolean;-->
	<s:HGroup width="100%" verticalAlign="middle" >
		<s:Label text="Walk on Balls" styleName="editRulesLabel" />
		<s:Spacer width="100%" />
		<s:ToggleSwitch id="ballsToggle" selected="@{_curRuleSet.walkOnBalls}"/>
	</s:HGroup>
	<s:Button id="saveBtn" label="Save" width="100%" mouseDown="saveBtnMouseDownHandler(event)" />
	
</views:AbstractRefView>
