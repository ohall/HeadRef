package model{
	public class GameModel{
		
		public static const TOP_INNING:int = 0;		
		public static const BOT_INNING:int = 1;
		
		[Bindable] private var _strikes			: Number=0;
		[Bindable] private var _balls			: Number=0;
		[Bindable] private var _fouls			: Number=0;
		[Bindable] private var _outs			: Number=0;
		[Bindable] private var _inning			: Number=0;
		[Bindable] private var _homeTeamScore	: Number=0;
		[Bindable] private var _awayTeamScore	: Number=0;
		
		[Bindable] private var _homeTeam : String;
		[Bindable] private var _awayTeam : String;

		[Bindable] private var _homeTeamColor : uint;
		[Bindable] private var _awayTeamColor : uint;

		[Bindable] private var _halfInning : int = TOP_INNING;

		
		[Bindable] public var leagueRules : LeagueRules;
		
		
		[Bindable]
		public function get strikes():Number{ return _strikes;}
		public function set strikes(pVal:Number):void{
			_strikes = pVal;
			if(_strikes >= leagueRules.strikesAllowed){
				outs++;
			}
		}
		[Bindable]
		public function get balls():Number{ return _balls;}
		public function set balls(pVal:Number):void{
			_balls = pVal;
			if(leagueRules.walkOnBalls && _balls >= leagueRules.ballsAllowed){
				newAtBat();
			}
		}
		[Bindable]
		public function get fouls():Number{ return _fouls;}
		public function set fouls(pVal:Number):void{
			_fouls = pVal;
			if(leagueRules.foulsAreStrikes){
				strikes++;
			}
		
		}
		[Bindable]
		public function get outs():Number{ return _outs;}
		public function set outs(pVal:Number):void{
			_outs = pVal;
			if( _outs >= 3){
				nextHalfInning();
			}
		}
		[Bindable]
		public function get inning():Number{ return _inning;}
		public function set inning(pVal:Number):void{
			_inning = pVal;
			if(_inning > leagueRules.innings){
				gameOver();
			}
		}
		
		
		//team names
		[Bindable]
		public function get homeTeam():String{ return _homeTeam;}
		public function set homeTeam(pVal:String):void{_homeTeam = pVal;}
		[Bindable]
		public function get awayTeam():String{ return _awayTeam;}
		public function set awayTeam(pVal:String):void{_awayTeam = pVal;}
		
		
		
		//jeresey colors
		[Bindable]
		public function get homeTeamColor():uint{ return _homeTeamColor;}
		public function set homeTeamColor(pVal:uint):void{_homeTeamColor = pVal;}
		[Bindable]
		public function get awayTeamColor():uint{ return _awayTeamColor;}
		public function set awayTeamColor(pVal:uint):void{_awayTeamColor = pVal;}
		
		
		//team scores
		[Bindable]
		public function get homeTeamScore():Number{ return _homeTeamScore;}
		public function set homeTeamScore(pVal:Number):void{_homeTeamScore = pVal;}
		[Bindable]
		public function get awayTeamScore():Number{ return _awayTeamScore;}
		public function set awayTeamScore(pVal:Number):void{_awayTeamScore = pVal;}
		
		
		public function halfInning():String{
			return (halfInning() == TOP_INNING)?RefConstants.INNING_TOP:RefConstants.INNING_BOT;
		}
		
		public function newAtBat():void{
			balls=0;
			strikes=0;
		}		
		
		
		public function runnerOut():void{
			outs++;
		}
		
		public function runnerSafe():void{
			newAtBat();
		}
		
		
		// private functions
		private function resetInning():void{
			newAtBat();
			outs=0;
		}
		
		private function nextHalfInning():void{
			if(_halfInning == TOP_INNING){
				_halfInning = BOT_INNING;
			}else{
				inning++;
				_halfInning = TOP_INNING;
			}	
		}
		
		private function gameOver():void{
			
		}
		
		public function GameModel(){}
	}
}