<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 width="100%" height="200" mouseDown="mouseDownHandler(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[			
			import flash.events.TimerEvent;
			import flash.utils.Timer;
			
			import mx.core.RuntimeDPIProvider;
			
			private const MIN_MASK:String = "00";
			private const SEC_MASK:String = "00";
			private const TIMER_INTERVAL:int = 1000;
			
			private var t:Timer;
			private var _running:Boolean = false;
			
			private var _timeLimit:Number;			
			
			
			////////////////////////
			//Interface
			///////////////////////
			
			public function set timeLimit(pLimit:Number):void{
				_timeLimit = pLimit;
				timerLabel.text = getTimeString(_timeLimit);
			}
			
			
			///////////////////////
			//Private Methods
			//////////////////////
			
			private function init():void {
				t = new Timer(TIMER_INTERVAL);
				t.addEventListener(TimerEvent.TIMER, updateTimer);
			}
			
			private function updateTimer(evt:TimerEvent):void {
				timerLabel.text = getTimeString(_timeLimit );
			}
			
			
			private function getTimeString(pTime:Number):String{
				var d:Date = new Date( pTime - getTimer() );
				var min:String = String(MIN_MASK + d.minutes).substr(-MIN_MASK.length);
				var sec:String = String(SEC_MASK + d.seconds).substr(-SEC_MASK.length);
				return String(min + ":" + sec);				
			}
			
			private function startTimer():void {
				t.start();
			}
			
			private function stopTimer():void {
				t.stop();
			}
			
			protected function mouseDownHandler(event:MouseEvent):void{
				if(!_running){
					_running = true;
					init();
					startTimer();
					descriptionLabel.text = "Time Remaining";
				}
			}
			
		]]>
	</fx:Script>
	<s:Label id="descriptionLabel" text="Tap to start Timer" />
	<s:Label id="timerLabel"  styleName="timerLabel" />
</s:VGroup>
