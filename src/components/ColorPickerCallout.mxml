<?xml version="1.0" encoding="utf-8"?>
<s:Callout xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark"
		   creationComplete="init()" xmlns:components="components.*">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.colorPickerClasses.WebSafePalette;
			
			import spark.collections.Sort;
			import spark.collections.SortField;
			import spark.components.List;
			private var wsp:WebSafePalette;
			
			/* Define the content fill items that should be colored by the "contentBackgroundColor" style. */
			static private const contentFill:Array = ["bgFill"];
			
			private function init():void {
				wsp = new WebSafePalette();
				
				var filteredArray:Array = wsp.getList().toArray().filter(removedDuplicates);
					
				var colorList:ArrayCollection = new ArrayCollection( filteredArray ); 
				colorList.addItem(0);
				
				var numericDataSort:Sort = new Sort();
				
				colorList.sort = numericDataSort;
				colorList.refresh();
				dataGroup.dataProvider = colorList;
			}
			
			private function removedDuplicates(item:Object, idx:uint, arr:Array):Boolean {
				if( item == 0 ){
					return false;
				}else{
					return true;
				}
			}
			
			private function blank(item:Object):String{
				return "";
			}
			
			private function handleEnter():void {
				close(true, previewColor);
			}
		]]>
	</fx:Script>
	
	<s:VGroup id="swatchpanel" horizontalAlign="center"   >
		<s:HGroup>
			<s:Rect id="preview" width="50" height="33" >
				<s:fill><s:SolidColor id="previewColor" /></s:fill>
			</s:Rect>
			<components:HeadRefTextInput 	id="ti" change="previewColor.color = uint('0x' + ti.text)"
						 					enter="handleEnter()" restrict="0123456789abcdefABCDEF"/>
		</s:HGroup>
		<s:Group >
			<s:SpinnerListContainer >
				<components:HeadRefSpinnerList id="dataGroup">
					<components:itemRenderer>
						<fx:Component>
							<s:ItemRenderer rollOver="outerDocument.previewColor.color = uint(data); 
											outerDocument.ti.text = data.toString(16)" click="clickHandler(event)">							
								<fx:Script>
									<![CDATA[
										protected function clickHandler(event:MouseEvent):void{
											outerDocument.close(true, outerDocument.previewColor);
										}
									]]>
								</fx:Script>
								<s:Rect id="swatch" width="200" height="40">
									<s:fill><s:SolidColor color="{data}" /></s:fill>
									<s:stroke><s:SolidColorStroke color="0xFFFF00" alpha="0" /></s:stroke>
								</s:Rect>
							</s:ItemRenderer>
						</fx:Component>
					</components:itemRenderer>
				</components:HeadRefSpinnerList>
			</s:SpinnerListContainer>
		</s:Group>
	</s:VGroup>
</s:Callout>
