<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" viewActivate="viewActivateHandler(event)" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		actionBarVisible="false">
	<fx:Script>
		<![CDATA[
			import model.GameModel;
			import model.HeadRefModel;
			
			import spark.events.ViewNavigatorEvent;
			import spark.managers.PersistenceManager;
			
			[Bindable]
			public var headRefModel:HeadRefModel;
			
			public var persistenceManager:PersistenceManager;
			
			//we've arrived in a new view, let's check on the model
			protected function viewActivateHandler(event:ViewNavigatorEvent):void{
				if (data) {
					headRefModel = HeadRefModel(data);
				}else if(headRefModel == null){
					headRefModel = new HeadRefModel();
				}
				
			}
			
			//we're leaving this view.  Take the model with us
			protected function goToView(pNextViewClass:Class):void{
				//we'll save data on every view change
				if(!persistenceManager){
					persistenceManager = new PersistenceManager();
					persistenceManager.setProperty(RefConstants.REF_DATA_KEY,headRefModel);
				}
				persistenceManager.save();
				navigator.pushView(pNextViewClass, headRefModel);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
</s:View>
