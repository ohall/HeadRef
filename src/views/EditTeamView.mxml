<?xml version="1.0" encoding="utf-8"?>
<views:AbstractRefView xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="AddTeamView" 
		xmlns:components="components.*" 
		xmlns:views="views.*">
	<fx:Script>
		<![CDATA[
			import components.ColorPicker;
			
			import model.TeamModel;
			
			import mx.graphics.SolidColor;
			
			import spark.events.ViewNavigatorEvent;
			
			[Bindable] private var selectedColor: SolidColor;			
			[Bindable] private var curTeamModel	: TeamModel;
			
			private var _editingExistingTeam:Boolean = false;
			
			private function colorChanged(e:Event):void {
				selectedColor = ColorPicker(e.currentTarget).currentColor;
				curTeamModel.teamColor = selectedColor.color;
			}
			
			protected function saveButtonClickHandler(event:MouseEvent):void{
				curTeamModel.captainEmail = emailInput.text;
				curTeamModel.teamName = teamNameInput.text;
				
				if(_editingExistingTeam){
					for(var i:int=0;i<headRefModel.teams.length;i++){     
						if(curTeamModel.id==TeamModel(headRefModel.teams[i]).id){
							headRefModel.teams[i] = curTeamModel;
						}
					}
				}else{
					headRefModel.teams.addItem(curTeamModel);					
				}
				
				if(headRefModel.homeOrAwayAdded == RefConstants.HOME){
					headRefModel.gameModel.homeTeam = curTeamModel;
				}else if(headRefModel.homeOrAwayAdded == RefConstants.AWAY){
					headRefModel.gameModel.awayTeam = curTeamModel;
				}
				goToView(GameView);
			}
			
			override protected function viewActivateHandler(event:ViewNavigatorEvent):void{
				super.viewActivateHandler(event);
				createOrEditTeam();
			}
			
			private function createOrEditTeam():void{
				if(headRefModel.teamSelectedForEditing == ""){//create
					curTeamModel = new TeamModel("",0x000000);
				}else{//edit
					_editingExistingTeam = true;
					for each(var team:TeamModel in headRefModel.teams){
						if(team.teamName == headRefModel.teamSelectedForEditing){
							curTeamModel = team;
							colorPicker.currentColor = new SolidColor(team.teamColor);
						}
					}
					headRefModel.teamSelectedForEditing = ""
				}
			}
			
			protected function deleteClickHandler(event:MouseEvent):void{
				if(_editingExistingTeam){
					for(var i:int=0;i<headRefModel.teams.length;i++){     
						if(curTeamModel.id==TeamModel(headRefModel.teams[i]).id){
							deleteTeamFromDataBase(curTeamModel.id);
							headRefModel.teams.removeItemAt(i);
						}
					}
				}
				teamNameInput.text = "";
				emailInput.text = "";
				colorPicker.currentColor = new SolidColor();
				goToView(GameView);
			}
			
		]]>
	</fx:Script>
		<components:ColorPicker 		 		y="10"		id="colorPicker" change="colorChanged(event)"/>
		<s:Label 						x="20" 	y="80" 		text="Team Name: " styleName="editTeamLabel"  />
		<components:HeadRefTextInput 	x="20"	y="100"		id="teamNameInput" text="@{curTeamModel.teamName}" />		
		<s:Label 					 	x="20" 	y="170"		text="Captain's Email: " styleName="editTeamLabel"  />
		<components:HeadRefTextInput 	x="20" 	y="190" 	id="emailInput" text="@{curTeamModel.captainEmail}" />		
		<s:Button 							 	y="300"		label="Save" click="saveButtonClickHandler(event)" width="100%" />
		<s:Button 							 	y="350"		label="Delete" click="deleteClickHandler(event)" width="100%" />
		<s:Button 							 	y="400"		label="Cancel" click="goToView(GameView)" width="100%" />
</views:AbstractRefView>